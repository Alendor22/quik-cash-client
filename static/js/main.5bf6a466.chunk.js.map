{"version":3,"sources":["redux/rootReducer.js","redux/actions.js","Pages/index.js","Pages/Signup.js","Pages/Login.js","Pages/Home.js","Components/BuyListing.js","Components/ListingLink.js","Containers/ListingLinkContainer.js","Components/UsersListings.js","Components/CreateListing.js","Components/UsersBoughtListings.js","Components/ListingsIndex.js","Components/UsersListingsIndex.js","Components/AvailableListings.js","Components/UsersListingsLink.js","Components/index.js","Routes.js","Components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["initialState","user","username","listings","BASE_URL","USERS_URL","setUserAction","userObj","type","payload","persistUser","dispatch","config","method","headers","localStorage","token","fetch","then","r","json","userInstance","addListing","listing","sellerId","body","JSON","stringify","seller_id","data","setListingAction","loadListingsIndex","fetchBuyListing","listing_id","buyer_id","history","sold","push","setItem","userCredentials","clear","Signup","props","useDispatch","useState","location","bio","password","signupForm","setSignupForm","handleChange","e","target","name","value","Form","onSubmit","preventDefault","userActions","Group","controlId","Label","Control","onChange","placeholder","as","rows","Button","variant","Login","loginForm","setLoginForm","Home","useSelector","state","text","BuyListing","handleBuyClick","id","onClick","this","Component","withRouter","connect","ListingLink","key","isLoggedIn","getItem","find","parseInt","pathname","split","buyerOfListing","buyer","listingAvail","upVote","setUpVote","downVote","setDownVote","to","item_name","description","price","seller","handleUpVoteClick","handleDownVoteClick","exact","path","render","routerProps","aListing","UsersListings","filter","map","index","initialFormState","CreateListing","setState","handleSubmit","resetForm","UsersBoughtListings","ListingsIndex","select","setSelect","sort","setSort","console","log","sortListings","a","b","la","toLowerCase","lb","handleSortToggle","Container","Row","lg","Col","s","userListings","match","params","AvailableListings","availListings","UsersListingsIndex","UsersListingsLink","component","Pages","Components","ListingLinkContainer","Nav","Navbar","sticky","collapseOnSelect","expand","bg","Brand","href","NavDropdown","title","active","Item","Divider","App","className","Jumbotron","Boolean","window","hostname","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","newListingArr","users","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5bf6a466.chunk.js","sourcesContent":["const initialState = {\n  user: {\n  username: \"\"\n},\n  listings: []\n};\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'SET_USER':\n      return {...state, user: payload};\n    case 'CLEAR_USER':\n      return {...state, user: {}}; \n    case 'SET_LISTING':\n      return {...state, listings: [...state.listings, payload]};\n    case \"GET_LISTINGS\":\n      return {...state, listings: payload}; \n    case 'BUY_LISTING':\n      const newListingArr = state.listings.map(listing => listing.id === payload.id ? payload : listing);\n      return {...state, listings: newListingArr};\n    case 'USERS_LISTINGS':\n      return {...state, users: [...state.user.listings, payload]};\n    default:\n      return state;\n  }\n};","const BASE_URL = 'http://quik-cash-api.herokuapp.com/api/v1';\nconst USERS_URL = BASE_URL + '/users';\nconst PERSIST_URL = BASE_URL + '/persist';\nconst LOGIN_URL = BASE_URL + '/login';\nconst SPECIFIC_USER_URL = id => USERS_URL + '/' + id;\n\n\nexport const setUserAction = userObj => ({\n  type: 'SET_USER',\n  payload: userObj\n});\n\nexport const clearUserAction = () => ({\n  type: 'CLEAR_USER'\n});\n\nexport const setListingAction = (listing) => ({\n  type: 'SET_LISTING',\n  payload: listing\n});\n\nexport const getListingsAction = (listingIndex) => ({\n  type: 'GET_LISTINGS',\n  payload: listingIndex\n});\n\nexport const buyListingAction = (listing) => ({\n  type: 'BUY_LISTING',\n  payload: listing\n});\n\n// Fetch\n\nexport const newUserToDB = userObj => dispatch => {\n  const config = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userObj)\n  };\n  fetch(USERS_URL, config)\n    .then(r => r.json())\n    .then(data => {\n      dispatch(setUserAction(data.user));\n      localStorage.setItem('token', data.token);\n    });\n};\n\nexport const deleteUserFromDB = userId => dispatch => {\n  const config = {\n    method: 'DELETE'\n  };\n  fetch(SPECIFIC_USER_URL(userId), config).then(r => {\n    dispatch(clearUserAction());\n    localStorage.clear();\n  });\n};\n\nexport const loginUserToDB = userCredentials => dispatch => {\n  const config = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userCredentials)\n  };\n  fetch (LOGIN_URL, config)\n    .then(r => r.json())\n    .then(data => {\n      dispatch(setUserAction(data.user));\n      localStorage.setItem('token', data.token);\n    });\n};\n\nexport const persistUser = () => dispatch => {\n  const config = {\n    method: 'GET',\n    headers: {\n      'Authorization': `bearer ` + localStorage.token\n    }\n  };\n  fetch(PERSIST_URL, config)\n    .then(r => r.json())\n    .then(userInstance => {\n      dispatch(setUserAction(userInstance));\n    });\n};\n\nexport const logoutUser = () => dispatch => {\n  dispatch(clearUserAction());\n  localStorage.clear();\n};\n\nexport const addListing = (listing, sellerId) => dispatch => {\n    const config = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `bearer ` + localStorage.token\n        },\n        body: JSON.stringify({\n          listing,\n          sellerId\n        })\n    };\n      fetch(USERS_URL + '/' + listing.seller_id + '/listings', config)\n      .then(r => r.json())\n      .then(data => {\n        dispatch(setListingAction(data));\n      });\n  };\n\nexport const loadListingsIndex = (listings) => dispatch => {\n  const config = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n    },\n      body: JSON.stringify(listings)\n   };\n    fetch(BASE_URL + '/listings', config)\n    .then(r => r.json())\n    .then(data => {\n      dispatch(getListingsAction(data));\n    });\n};\n\nexport const fetchBuyListing = (listing_id, buyer_id, seller_id, history) => dispatch => {\n  const config = {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Authorization': `bearer ` + localStorage.token\n    },\n      body: JSON.stringify({\n          buyer_id,\n          sold: true\n      })\n   };\n    fetch(USERS_URL + '/' + seller_id + '/listings/' + listing_id, config)\n    .then(r => r.json())\n    .then(data => {\n      dispatch(buyListingAction(data));\n      \n      history.push('/listings');\n    });\n};\n\n// export const loadUsersListingsIndex = (listings, sellerId) => dispatch => {\n//   const config = {\n//     method: 'GET',\n//     headers: {\n//       'Content-Type': 'application/json',\n//       'Accept': 'application/json',\n//     },\n//       body: JSON.stringify({\n//         listings,\n//         sellerId\n//       })\n//    };\n//     fetch(USERS_URL + '/' + listings.seller_id + '/listings', config)\n//     .then(r => r.json())\n//     .then(data => {\n//       dispatch(getUsersListingsIndexAction(data));\n//     });\n// };\n\nexport default {\n  newUserToDB,\n  deleteUserFromDB,\n  loginUserToDB,\n  persistUser,\n  logoutUser,\n  addListing,\n  loadListingsIndex,\n  fetchBuyListing\n};","import Signup from './Signup';\nimport Login from './Login';\nimport Home from './Home';\n\nexport default {\n  Signup,\n  Login,\n  Home\n};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport userActions from '../redux/actions.js';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nconst Signup = props => {\n  // initializing dispatch\n  const dispatch = useDispatch();\n\n  // Setting up local state using the useState hook\n  const [signupForm, setSignupForm] = useState({\n    username: '',\n    location: '',\n    bio: '',\n    password: ''\n  });\n\n  // Controlled form functions\n  const handleChange = e =>\n    setSignupForm({ ...signupForm, [e.target.name]: e.target.value });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { history } = props;\n    dispatch(userActions.newUserToDB(signupForm));\n    history.push('/listings');\n  };\n\n  // Destructuring keys from our local state to use in the form\n  const { username, location, bio, password } = signupForm;\n\n  // Component code\n  return (\n    <Form onSubmit={handleSubmit}>\n      <h1>Signup Page</h1>\n        <Form.Group controlId=\"user-signup\">\n          <Form.Label>Please Select a Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"username\"\n              value={username}\n              onChange={handleChange}\n              placeholder=\"Username\"\n            />\n        </Form.Group>\n        <Form.Group controlId=\"user-location\">\n          <Form.Label>Please enter your location</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"location\"\n              value={location}\n              onChange={handleChange}\n              placeholder=\"State\\Territory\"\n            />\n        </Form.Group>\n        <Form.Group controlId=\"bio\">\n          <Form.Label>Short-Bio</Form.Label>\n            <Form.Control as=\"textarea\" rows=\"3\" \n              name=\"bio\" \n              value={bio}\n              onChange={handleChange}\n              placeholder=\"Bio\"\n            />\n        </Form.Group>\n        <Form.Group controlId=\"signUpPwField\">\n          <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              placeholder=\"Password\"\n            />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Create Account\n        </Button>\n    </Form>\n  );\n};\n\nexport default Signup;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport userActions from '../redux/actions';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\n\nconst LoginPage = props => {\n  // initializing dispatch\n  const dispatch = useDispatch();\n  // Setting up local state using the useState hook\n  const [loginForm, setLoginForm] = useState({\n    username: '',\n    password: ''\n  });\n\n  // controlled form functions\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(userActions.loginUserToDB(loginForm));\n    props.history.push('/listings/new');\n  };\n\n  const handleChange = e =>\n    setLoginForm({ ...loginForm, [e.target.name]: e.target.value });\n\n  // Destructuring keys from our local state to use in the form\n  const { username, password } = loginForm;\n\n  // Component code\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <h1>Login Page</h1>\n        <Form.Group controlId=\"logInForm\">\n          <Form.Label>Username</Form.Label>\n            <Form.Control \n            type=\"text\" \n            name=\"username\"\n            placeholder=\"Enter Username\"\n            value={username}\n            onChange={handleChange}\n            />\n        </Form.Group>\n        <Form.Group controlId=\"logInwField\">\n          <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={handleChange}\n            />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Login\n        </Button>\n      </Form>\n    </div> \n  \n  );\n \n};\n\n\n\nexport default LoginPage;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\n\nconst Home = () => {\n  const username = useSelector(state => state.user.username);\n  const text = username ? (\n    <h1>{username} is currently logged in</h1>\n  ) : (\n    <h1>Currently not logged in</h1>\n  );\n  return <div>{text}</div>;\n};\n\nexport default Home;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchBuyListing } from '../redux/actions';\nimport { withRouter } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\n\n\nclass BuyListing extends Component {\n\n  \n    handleBuyClick = (e) => {\n      e.preventDefault()\n        this.props.fetchBuyListing(this.props.listing.id, this.props.buyer_id, this.props.listing.seller_id, this.props.history)\n    }\n\n      render() {\n        return (\n              <>\n                <Button variant=\"primary\" type=\"submit\" onClick={this.handleBuyClick}>Buy-Listing</Button>\n              </>\n        )\n      }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    buyer_id: state.user.id,\n    listings: state.listings \n  };\n};\n\nexport default withRouter(connect(mapStateToProps, { fetchBuyListing })(BuyListing))","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport BuyListing from './BuyListing'\nimport { Link } from 'react-router-dom';\n\n\nexport const ListingLink = (props) => {\n  const { key } = props;\n  const listings = useSelector(state => state.listings);\n  let token = localStorage.getItem('token');\n  const isLoggedIn = !!token;\n  const listing = listings.find(listing => listing.id === parseInt(props.location.pathname.split('/listings/')[1]));\n  const buyerOfListing = listing && listing.buyer && listing.buyer.username;\n  const listingAvail = listing && !listing.sold;\n\n  let [upVote, setUpVote] = useState(0)\n  let [downVote, setDownVote] = useState(0)\n\n  const handleUpVoteClick = (e) => {\n    e.preventDefault()\n    setUpVote(upVote + 1)\n  };\n\n  const handleDownVoteClick = (e) => {\n    e.preventDefault()\n    setDownVote(downVote - 1)\n  };\n\n      const renderListingLink = () => {\n\n      \n        return <>\n                  <h3>Quik-Listing</h3>\n                  <span key={key} to={`/listings/${key}`}>\n                  <p>Item Name - {listing.item_name}</p>\n                  <p>Description - {listing.description}</p>\n                  <p>Price - ${listing.price}</p>\n                  <p>Seller - <Link to={`/users/${listing.seller_id}/listings`}>{listing.seller.username}</Link></p>\n                  <p>Seller Bio - {listing.seller.bio}</p>\n                  <p>Buyer - <Link to={`/users/${listing.buyer_id}/listings`}>{listingAvail && isLoggedIn ? <BuyListing listing = {listing}/> : buyerOfListing}</Link></p>\n                  </span>\n                  <button type=\"submit\" onClick={(e) => {handleUpVoteClick(e)}}>Up-Vote-Listing: {upVote}</button>\n                  <button type=\"submit\" onClick={(e) => {handleDownVoteClick(e)}}>Down-Vote-Listing: {downVote}</button>\n               </>\n    }\n\n\n    return (\n      <ul>\n         {listing ? renderListingLink() : <p>loading...</p>}\n      </ul>\n    )\n\n}\n\n\nexport default ListingLink","import React from 'react';\nimport { connect } from 'react-redux';\nimport { loadListingsIndex } from '../redux/actions';\nimport { Switch, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ListingLink  from '../Components/ListingLink';\n\nexport const ListingLinkContainer = (props) => {\n  const listings = useSelector(state => state.listings);\n\n  const loadListing = (routerProps) => {\n    let aListing = listings.find(listing => listing.id === parseInt(props.location.pathname.split('/listings/')[1]))\n    const isListingSold = !!aListing && aListing.sold;\n    \n      return isListingSold ? 'Sorry, this listing has been purchased!' : <ListingLink {...routerProps} listing={aListing}/>;\n  };\n  \n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/listings/:id\" render={loadListing}/>\n      </Switch>\n    </>\n  )\n}\n\n\n\nexport default connect(null, {loadListingsIndex})(ListingLinkContainer);","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nexport const UsersListings = () => {\n  const listings = useSelector(state => state.listings);\n  const user = useSelector(state => state.user);\n  const userListings = () => {\n    if(user.username){\n      return listings.filter(listing => listing.seller_id === user.id);\n    }\n    else {\n      return [];\n    }\n  };\n\n  \n  const renderUserStuff = () => {\n    return userListings().map((listing, index) => {\n      return (\n        <div key={index}>\n          <p><span>Seller: </span>{listing.seller.username}</p>\n          <p><span>Item: </span>{listing.item_name}</p>\n          <p><span>Price: $</span>{listing.price}</p>\n        </div>\n      )\n    })\n  }\n\n  return (\n        <div>\n          {renderUserStuff()} \n        </div>\n  )\n}\n\nexport default UsersListings\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addListing } from '../redux/actions';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nconst initialFormState = {\n  item_name: \"\",\n  description: \"\",\n  price: \"\"\n};\n\nclass CreateListing extends Component {\n  \n  state = initialFormState;\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  \n  handleSubmit = (e) => {\n    e.preventDefault()\n    let listing = {\n      seller_id: this.props.seller_id,\n      item_name: this.state.item_name,\n      description: this.state.description,\n      price: this.state.price\n    }\n    this.props.addListing(listing)\n    this.props.history.push('/listings')\n  }\n\n  resetForm = () => {\n    this.setState(initialFormState)\n  };\n\n  render() {\n    return (\n      <>\n        <h3>Create a new Quik-Listing</h3>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Group controlId=\"item_name\">\n              <Form.Label>Item Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"item_name\"\n                  value={this.state.item_name}\n                  onChange={this.handleChange}\n                />\n            </Form.Group>\n            <Form.Group controlId=\"description\">\n              <Form.Label>Description</Form.Label>\n                <Form.Control as=\"textarea\" rows=\"3\" \n                  name=\"description\" \n                  value={this.state.description}\n                  onChange={this.handleChange}\n                />\n            </Form.Group>\n            <Form.Group controlId=\"price\">\n              <Form.Label>price$</Form.Label>\n                <Form.Control\n                  type=\"number\" \n                  placeholder=\"0.00\" \n                  name=\"price\" \n                  value={this.state.price}\n                  onChange={this.handleChange}\n                /> \n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Add Listing\n            </Button>\n        </Form>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { \n    listings: state.listings,\n    seller_id: state.user.id\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addListing: (listing) => dispatch( addListing(listing) ) \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateListing)\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nexport const UsersBoughtListings = () => {\n  const listings = useSelector(state => state.listings);\n  const user = useSelector(state => state.user);\n  const userBoughtListings = () => {\n    if(user.username){\n      return listings.filter(listing => listing.buyer_id === user.id);\n    }\n    else {\n      return [];\n    }\n  };\n\n  \n  const renderUserBoughtStuff = () => {\n    return userBoughtListings().map((listing, index) => {\n      return (\n        <div key={index}>\n          <p><span>Seller: </span>{listing.seller.username}</p>\n          <p><span>Item: </span>{listing.item_name}</p>\n          <p><span>Price: $</span>{listing.price}</p>\n        </div>\n      )\n    })\n  }\n\n  return (\n        <div>\n          {renderUserBoughtStuff()} \n        </div>\n  )\n}\n\nexport default UsersBoughtListings","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport UsersBoughtListings from './UsersBoughtListings';\nimport UsersListings from './UsersListings';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\n\nexport const ListingsIndex = () => {\n  const listings = useSelector(state => state.listings);\n  let token = localStorage.getItem('token');\n  const isLoggedIn = !!token;\n      \n    const [select, setSelect] = useState(\"\")\n    const [sort, setSort] = useState(false)\n\n    const handleSortToggle = (listings) => {\n      let sortListings = [...listings]\n      console.log(\"sortListings\", sortListings )\n        if (sort === true) {\n         return sortListings.sort((a,b) => {\n          let la = a[\"item_name\"].toLowerCase(),\n          lb = b[\"item_name\"].toLowerCase()\n          console.log(\"I'm la\", la)\n          // console.log(\"I'm lb\", lb)\n          if (la < lb) {\n            return -1;\n          }\n          if (la > lb) {\n            return 1;\n          }\n          return 0;\n        });\n      } else {\n        return listings\n      }\n  \n    }\n\n    const handleChange = (e) => {\n      setSelect(e.target.value)\n      console.log(e.target.value)\n    };\n\n    const currentListings = () => {\n      if (select === \"available\") {\n        console.log(\"buy me\")\n        return listings.filter(listing => listing.sold === false)\n      }\n      else if (select === \"sold\") {\n        console.log(\"I'm sold\")\n        return listings.filter(listing => listing.sold === true)\n      }\n      else {\n        return listings\n      }\n    } \n\n\n\n    const renderListingsIndex = () => {\n      console.log(\"test\")\n      return handleSortToggle(currentListings()).map(listing => {\n        return  <div key={listing.id}>\n                  <Container>\n                    <Row lg={3}>\n                      <Col s={6}></Col>\n                        <Link key={listing.id} to={`/listings/${listing.id}`}>{listing.item_name}{listing.sold === true ? \" - Sold\" : \"\"}</Link>\n                    </Row>  \n                  </Container>\n                </div>\n               \n      })      \n  \n    }\n\n    return (\n      <div>\n      <ul>\n        <h3>Quik-Listings</h3>\n                  <form>\n                    <label>\n                      Choose the listings you'd like to see.\n                        <select value={select} onChange={handleChange}>\n                          <option value=\"available\">Available-Listings</option>\n                          <option value=\"sold\">Sold-Listings</option>\n                          <option value=\"all listings\">All-Listings</option>\n                        </select>\n                      </label>\n                  </form>\n          {renderListingsIndex()}\n      </ul>\n      <button onClick={() => setSort(!sort)}>Sort-Toggle</button>\n      <br />\n      <Container>\n        <Row lg={3}>\n          <Col s={6}></Col>\n            <h3>My-Quik-Listings</h3>\n              {isLoggedIn ? <UsersListings /> : \"Please login to see your Quik-listings!\" }\n        </Row>\n        <Row lg={1}>\n          <Col s={6}></Col>\n            <h3>My-Quik-Buys</h3>\n              {isLoggedIn ? <UsersBoughtListings /> : \"Please login to see your Quik-buys! \"}  \n        </Row>\n      </Container> \n      </div>\n    )\n\n}\n\n\nexport default ListingsIndex\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\n\n\nexport const UsersListingsIndex = (routerProps) => {\n      const userListings = useSelector(state => state.listings.filter(listings => listings.seller_id === parseInt(routerProps.match.params.id)));\n      const renderUsersListingsIndex = () => {\n        return userListings.map(listing => {\n          return  <div key={listing.id}>\n                      <Link key={listing.id} to={`listings/${listing.seller_id}`}>Seller: {listing.seller.username} - Listing: {listing.item_name}</Link>\n                  </div>\n                    \n        })\n    }\n    \n    return (\n      <ul>\n          {renderUsersListingsIndex()} \n      </ul>\n    )\n\n}\n\nexport default withRouter((UsersListingsIndex))\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport const AvailableListings = () => {\n  const listings = useSelector(state => state.listings);\n  const availListings = listings.filter(listing => listing.sold === false);\n \n  const renderAvailListings = () => {\n    return availListings.map(listing => {\n      return  <div key={listing.id}>\n              <Container>\n                <Row>\n                  <Col></Col>\n                  <Link key={listing.id} to={`/listings/${listing.id}`}>{listing.item_name}</Link>\n                </Row>\n              </Container>  \n              </div>\n      \n    })\n    \n  }\n\n  return (\n    <div>\n      <h3>Available-Quik-Listings</h3>\n        {renderAvailListings()}\n    </div>\n  )\n\n}\n\nexport default AvailableListings\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\n\n\nexport const UsersListingsLink = (props) => {\n      const user = useSelector(state => state.user);\n      const listings = useSelector(state => state.listings);\n      const usersListings = () => {\n        if(user.username){\n          return listings.filter(listing => listing.seller_id === user.id);\n        }\n        else {\n          return [];\n        }\n        \n      }\n\n      const renderUsersListingsLink = () => {\n        return usersListings().map(listing => {\n          return (\n                  <div key={listing.id}>\n                      <Link key={listing.id} to={`/users/${listing.seller_id}/listings/${listing.id}`}> - Listings purchased by {user.username} {listing.item_name}</Link>\n                  </div>\n\n          )  \n        })\n      }\n    \n    \n    \n    return (\n      <ul>\n          {renderUsersListingsLink()} \n      </ul>\n    )\n\n}\n\nexport default withRouter(UsersListingsLink)","import BuyListing from './BuyListing';\nimport UsersListings from './UsersListings';\nimport CreateListing from './CreateListing';\nimport ListingsIndex from './ListingsIndex';\nimport ListingLink from './ListingLink';\nimport UsersListingsIndex from './UsersListingsIndex';\nimport UsersBoughtListings from './UsersBoughtListings';\nimport AvailableListings from './AvailableListings';\nimport UsersListingsLink from './UsersListingsLink';\n\nexport default {\n  AvailableListings,\n  BuyListing,\n  UsersListings,\n  CreateListing,\n  ListingsIndex,\n  ListingLink,\n  UsersBoughtListings,\n  UsersListingsIndex,\n  UsersListingsLink,\n};","import React from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport Pages from './Pages';\nimport ListingLinkContainer from './Containers/ListingLinkContainer';\nimport Components from './Components';\n\n\nconst Routes = () => {\n\n  return (\n      <Switch>\n        <Route exact path=\"/signup\" component={Pages.Signup} />\n        <Route exact path=\"/login\" component={Pages.Login} />\n        <Route exact path=\"/listings/new\" component={Components.CreateListing} />\n        <Route exact path=\"/listings\" component={Components.ListingsIndex} />\n        <Route exact path=\"/listings/:id\" component={ListingLinkContainer} />\n        <Route exact path=\"/users/:id/listings\" component={Components.UsersListingsIndex} />\n        <Route exact path=\"/users/:id/listings/:id\" component={Components.UsersListingsLink} />\n      </Switch>\n  )\n}\n\nexport default withRouter(Routes);","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport userActions from '../redux/actions';\nimport { NavLink } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { LinkContainer } from 'react-router-bootstrap';\n\n\n\n  const Nav = () => {\n    const dispatch = useDispatch();\n    const handleLogout = () => {\n      dispatch(userActions.logoutUser());\n    };\n    \n  return (\n    <Navbar sticky=\"top\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand href=\"/listings\">Quik-Cash</Navbar.Brand>\n        <NavLink to=\"/listings/new\">Post Listing</NavLink> \n          <NavDropdown title=\"User-Portal\" id=\"collapsible-nav-dropdown\" active>\n            <LinkContainer to=\"/login\">\n              <NavDropdown.Item active>Login</NavDropdown.Item>\n            </LinkContainer>\n              <NavDropdown.Divider />\n            <LinkContainer to=\"/listings\">\n              <NavDropdown.Item active onClick={handleLogout}>Logout</NavDropdown.Item>\n            </LinkContainer>\n              <NavDropdown.Divider />\n            <LinkContainer to=\"/signup\">\n              <NavDropdown.Item active>Signup</NavDropdown.Item>\n            </LinkContainer>\n        </NavDropdown>     \n    </Navbar>\n  );\n}\n\n\nexport default Nav;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport React, { Component } from 'react';\nimport Routes from './Routes';\nimport Nav from './Components/Nav';\nimport { loadListingsIndex, persistUser } from './redux/actions';\nimport { connect } from 'react-redux';\nimport Pages from './Pages';\nimport { withRouter } from 'react-router-dom';\nimport './index.css';\n\n\n\nclass App extends Component {\n\n  componentDidMount () {\n    this.props.loadListingsIndex();\n    if(!this.props.user.username && localStorage.getItem('token')) {\n      this.props.persistUser();\n    }\n    this.props.history.push(\"/listings\");\n  }\n  \n  render() {\n  return (\n    <>\n      <Container className=\"p-3\">\n        <Jumbotron>\n          <h1>QuikCash - A Listing and Buying Site</h1>\n            <h6>Created by: Adeja</h6>\n              <Nav />\n              <Pages.Home />\n            <Routes />\n        </Jumbotron>    \n      </Container>\n    </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, { loadListingsIndex, persistUser })(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport thunk from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './redux/rootReducer.js'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}